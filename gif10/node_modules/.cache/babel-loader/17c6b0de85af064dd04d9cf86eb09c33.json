{"ast":null,"code":"var _jsxFileName = \"C:\\\\Software_Engineering_Study\\\\Projects\\\\Create-Your-Own-Gif\\\\Project-3\\\\Project-3-Front-End\\\\gif10\\\\src\\\\Components\\\\NewForm.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      console.log(this.state);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //fetch and update props{addBookmark in app}\n\n      console.log(this.props.baseUrl);\n      fetch(`${this.props.baseUrl}/gifs`, {\n        method: 'POST',\n        body: JSON.stringify({\n          //below is where the other attributes get put...\n          name: this.state.name,\n          url: this.state.url,\n          descrption: this.state.description\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        this.props.addGifs(data);\n        console.log(data);\n        this.setState({\n          name: '',\n          url: '',\n          description: ''\n        });\n      }).catch(error => console.error);\n    };\n\n    this.state = {\n      name: '',\n      url: '',\n      description: ''\n    }; // this.handleChange = this.handleChange.bind(this)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => this.handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: e => this.handleChange(e),\n        value: this.state.name,\n        placeholder: \"add gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: \"URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url\",\n        name: \"url\",\n        onChange: e => this.handleChange(e),\n        value: this.state.url,\n        placeholder: \"URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"description\",\n        name: \"description\",\n        onChange: e => this.handleChange(e),\n        value: this.state.description,\n        placeholder: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add a gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Software_Engineering_Study/Projects/Create-Your-Own-Gif/Project-3/Project-3-Front-End/gif10/src/Components/NewForm.js"],"names":["React","Component","NewForm","constructor","props","handleChange","e","console","log","state","setState","target","name","value","handleSubmit","preventDefault","baseUrl","fetch","method","body","JSON","stringify","url","descrption","description","headers","then","res","json","data","addGifs","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class NewForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            url: '',\r\n            description: ''\r\n        }\r\n        // this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    handleChange =(e)=> {\r\n        console.log(this.state)\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n     handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //fetch and update props{addBookmark in app}\r\n        console.log(this.props.baseUrl)\r\n        fetch(`${this.props.baseUrl}/gifs`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                //below is where the other attributes get put...\r\n                name: this.state.name,\r\n                url: this.state.url,\r\n                descrption: this.state.description\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then ( res => {\r\n            return res.json()\r\n        }).then ( data => {\r\n            this.props.addGifs(data)\r\n            console.log(data)\r\n            this.setState({\r\n                name: '',\r\n                url: '',\r\n                description: ''\r\n            })\r\n        }).catch(error => console.error)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={ (e) => this.handleSubmit(e)}>\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input type=\"text\" id=\"name\" name=\"name\" onChange={ (e) => this.handleChange(e)} value={this.state.name} placeholder=\"add gif\" />\r\n                <label htmlFor=\"url\">URL:</label>\r\n                <input type=\"text\" id=\"url\" name=\"url\" onChange={ (e) => this.handleChange(e)} value={this.state.url} placeholder=\"URL\" />\r\n                <label htmlFor=\"description\">Description:</label>\r\n                <input type=\"text\" id=\"description\" name=\"description\" onChange={ (e) => this.handleChange(e)} value={this.state.description} placeholder=\"description\" />\r\n                <input type=\"submit\" value=\"Add a gif\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}