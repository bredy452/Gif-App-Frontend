{"ast":null,"code":"var _jsxFileName = \"C:\\\\Software_Engineering_Study\\\\Projects\\\\Create-Your-Own-Gif\\\\Project-3\\\\Project-3-Front-End\\\\gif10\\\\src\\\\Components\\\\EditForm.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class EditForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //fetch and update props{addBookmark in app}\n\n      fetch(`${this.props.baseUrl}/gifs/${this.props.gif._id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          //below is where the other attributes get put...\n          name: this.state.name,\n          url: this.state.url,\n          description: this.state.description,\n          id: this.props.gif._id\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        this.props.getGifs();\n      }).catch(error => console.error);\n    };\n\n    this.state = {\n      name: this.props.gif.name,\n      url: this.props.gif.url,\n      description: this.props.gif.description\n    }; // this.handleChange = this.handleChange.bind(this)\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: e => this.handleChange(e),\n          value: this.state.name,\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"url\",\n          children: \"URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"url\",\n          name: \"url\",\n          onChange: e => this.handleChange(e),\n          value: this.state.url,\n          placeholder: \"Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"description\",\n          name: \"description\",\n          onChange: e => this.handleChange(e),\n          value: this.state.description,\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Software_Engineering_Study/Projects/Create-Your-Own-Gif/Project-3/Project-3-Front-End/gif10/src/Components/EditForm.js"],"names":["React","Component","EditForm","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","fetch","baseUrl","gif","_id","method","body","JSON","stringify","state","url","description","id","headers","then","res","json","data","getGifs","catch","error","console","render","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class EditForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name:this.props.gif.name,\r\n            url: this.props.gif.url,\r\n            description: this.props.gif.description\r\n        }\r\n        // this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n     handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //fetch and update props{addBookmark in app}\r\n        \r\n        fetch(`${this.props.baseUrl}/gifs/${this.props.gif._id}`,  {\r\n            method: 'PUT', \r\n            body: JSON.stringify({\r\n                //below is where the other attributes get put...\r\n                name: this.state.name,\r\n                url: this.state.url,\r\n                description: this.state.description,\r\n                id: this.props.gif._id\r\n            }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n        }).then ( res => {\r\n            return res.json()\r\n        }).then ( data => {\r\n            this.props.getGifs()\r\n        }).catch(error => console.error)\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <>\r\n            <form onSubmit={ (e) => this.handleSubmit(e)}>\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input type=\"text\" id=\"name\" name=\"name\" onChange={ (e) => this.handleChange(e)} value={this.state.name} placeholder=\"Name\" />\r\n                <label htmlFor=\"url\">URL:</label>\r\n                <input type=\"text\" id=\"url\" name=\"url\" onChange={ (e) => this.handleChange(e)} value={this.state.url} placeholder=\"Url\" />\r\n                <label htmlFor=\"description\">Description:</label>\r\n                <input type=\"text\" id=\"description\" name=\"description\" onChange={ (e) => this.handleChange(e)} value={this.state.description} placeholder=\"Description\" />\r\n                <input type=\"submit\" value=\"Update Gif\"/>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}