{"ast":null,"code":"var _jsxFileName = \"C:\\\\Software_Engineering_Study\\\\Projects\\\\Create-Your-Own-Gif\\\\Project-3\\\\Project-3-Front-End\\\\gif10\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport NewForm from './Components/NewForm';\nimport Logout from './Components/Logout';\nimport Register from './Components/Register';\nimport Login from './Components/Login';\nimport \"./App.css\"; // import Edit from './Components/Edit'\n\nimport ShowGifs from './Components/ShowGifs';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = '';\n\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'http://localhost:3003';\n} else {\n  baseUrl = 'heroku url here';\n}\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkLogin = () => {\n      console.log(this.state.session);\n      let sessionUser = localStorage.getItem('user');\n      this.setState({\n        sessionUser: sessionUser\n      });\n    };\n\n    this.getUser = () => {\n      this.checkLogin();\n      this.setState({\n        session: !this.state.session\n      });\n    };\n\n    this.getGifs = () => {\n      fetch(`${baseUrl}/gifs`).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          gifs: data\n        });\n      });\n    };\n\n    this.addGif = newGif => {\n      const copyGifs = [...this.state.gifs];\n      copyGifs.push(newGif);\n      this.setState({\n        gifs: copyGifs,\n        name: ''\n      });\n    };\n\n    this.addSession = newSession => {\n      localStorage.setItem('user', JSON.stringify(newSession));\n      let sessionUser = localStorage.getItem('user'); // const copySession = [...this.state.user]\n      // copySession.push(newSession)\n\n      this.setState({\n        user: sessionUser,\n        session: true,\n        sessionUser: sessionUser\n      });\n      console.log(this.state.user);\n    };\n\n    this.deleteSession = deletedSession => {\n      // const findIndex = this.state.user.findIndex(user => deletedSession._id === user._id)\n      // const copySession = [...this.state.user]\n      // copySession.splice(findIndex, 1)\n      localStorage.clear();\n      this.setState({\n        user: '',\n        session: false,\n        sessionUser: ''\n      });\n    };\n\n    this.register = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.state = {\n      user: '',\n      session: false,\n      gifs: [],\n      sessionUser: {},\n      visible: true\n    };\n  }\n\n  componentDidMount() {\n    this.getGifs();\n    this.checkLogin();\n  }\n\n  render() {\n    let user = this.state.sessionUser; // console.log(this.state.gifs)\n    //COME BACK TO THIS\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [(() => {\n          if (user) {\n            return [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"The Amazing Giph App!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(NewForm, {\n                baseUrl: baseUrl,\n                addGifs: this.addGif\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(ShowGifs, {\n                newGif: this.state.gifs,\n                getGifs: this.getGifs,\n                baseUrl: baseUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Logout, {\n              getUser: this.getUser,\n              baseUrl: baseUrl,\n              deleteSession: this.deleteSession\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)];\n          } else {\n            if (this.state.visible === true) {\n              return [/*#__PURE__*/_jsxDEV(Login, {\n                checkSession: this.checkLogin,\n                baseUrl: baseUrl,\n                addSessions: this.addSession,\n                register: this.register,\n                visible: this.state.visible\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)];\n            } else {\n              return /*#__PURE__*/_jsxDEV(Register, {\n                baseUrl: baseUrl,\n                addUser: this.addUser,\n                register: this.register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this);\n            }\n          }\n        })(), \"\\u200B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Software_Engineering_Study/Projects/Create-Your-Own-Gif/Project-3/Project-3-Front-End/gif10/src/App.js"],"names":["React","Component","NewForm","Logout","Register","Login","ShowGifs","BrowserRouter","Router","Switch","Route","Link","Redirect","useHistory","useLocation","baseUrl","process","env","NODE_ENV","App","constructor","props","checkLogin","console","log","state","session","sessionUser","localStorage","getItem","setState","getUser","getGifs","fetch","then","res","json","data","gifs","addGif","newGif","copyGifs","push","name","addSession","newSession","setItem","JSON","stringify","user","deleteSession","deletedSession","clear","register","visible","componentDidMount","render","addUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport NewForm from './Components/NewForm'\r\nimport Logout from './Components/Logout'\r\nimport Register from './Components/Register'\r\nimport Login from './Components/Login'\r\nimport \"./App.css\"\r\n// import Edit from './Components/Edit'\r\nimport ShowGifs from './Components/ShowGifs'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\"\r\n\r\nlet baseUrl = ''\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  baseUrl = 'http://localhost:3003'\r\n} else {\r\n  baseUrl = 'heroku url here'\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      user: '',\r\n      session: false,\r\n      gifs: [],\r\n      sessionUser: {},\r\n      visible: true\r\n    }\r\n  }\r\n\r\n  checkLogin = () => {\r\n    console.log(this.state.session)\r\n    let sessionUser = localStorage.getItem('user')\r\n    this.setState({\r\n      sessionUser: sessionUser\r\n    })\r\n  }\r\n\r\n  // addUser = (newUser) => {\r\n  //   const copyUser = [...this.state.user]\r\n  //   copyUser.push(newUser)\r\n  //   this.setState({\r\n  //     user: copyUser,\r\n  //   })\r\n  //   this.checkLogin()\r\n  // }\r\n\r\n  getUser = () => {\r\n    this.checkLogin()\r\n    this.setState({\r\n      session: !this.state.session\r\n    })\r\n  }\r\n\r\n  getGifs = () => {\r\n    fetch(`${baseUrl}/gifs`)\r\n    .then(res => {\r\n      return res.json()})\r\n    .then(data => {\r\n        this.setState({\r\n          gifs: data\r\n        })\r\n      })\r\n  }\r\n\r\n  addGif = (newGif) => {\r\n\r\n    const copyGifs = [...this.state.gifs]\r\n    copyGifs.push(newGif)\r\n    this.setState({\r\n      gifs: copyGifs,\r\n      name: ''\r\n    })\r\n  }\r\n\r\n  addSession = (newSession) => {\r\n    localStorage.setItem('user', JSON.stringify(newSession))\r\n    let sessionUser = localStorage.getItem('user')\r\n    \r\n    // const copySession = [...this.state.user]\r\n    // copySession.push(newSession)\r\n    this.setState({\r\n      user: sessionUser,\r\n      session: true,\r\n      sessionUser: sessionUser\r\n    })\r\n    console.log(this.state.user)\r\n  }\r\n\r\n  deleteSession = (deletedSession) => {\r\n    // const findIndex = this.state.user.findIndex(user => deletedSession._id === user._id)\r\n          // const copySession = [...this.state.user]\r\n          // copySession.splice(findIndex, 1)\r\n          localStorage.clear()\r\n          this.setState({\r\n            user: '',\r\n            session: false,\r\n            sessionUser: ''\r\n          })\r\n  }\r\n\r\n  register = () => {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getGifs()\r\n    this.checkLogin()\r\n  }\r\n\r\n  render() {\r\n       let user  = this.state.sessionUser\r\n       // console.log(this.state.gifs)\r\n       //COME BACK TO THIS\r\n    return (\r\n\r\n      <>\r\n       <div>\r\n         {(() => {\r\n          if (user) {\r\n            return ([ <div className='container'>\r\n            <h1>The Amazing Giph App!</h1>\r\n           <NewForm baseUrl={baseUrl} addGifs={this.addGif}/>\r\n           <ShowGifs newGif={this.state.gifs} getGifs={this.getGifs} baseUrl={baseUrl}/>\r\n       </div>,\r\n            <Logout getUser={this.getUser} baseUrl={baseUrl} deleteSession={this.deleteSession} />])\r\n              \r\n          }  else {\r\n            if (this.state.visible===true) {\r\n\r\n         return ([<Login checkSession={this.checkLogin} baseUrl={baseUrl} addSessions={this.addSession} register={this.register} visible={this.state.visible} />,\r\n              \r\n               ])\r\n              }\r\n             else {\r\n               return(<Register baseUrl={baseUrl} addUser={this.addUser} register={this.register}/>)\r\n            }\r\n          }\r\n         })\r\n         ()}\r\n ​\r\n      </div>\r\n      \r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}